#!/bin/sh

#PIDFile=/var/run/${0##*/}.pid
#ConfigFile=/etc/scrubbR.conf

PIDFile=${0##*/}.pid
ConfigFile=scrubbR.conf

###############################################################################

# initialize 'daemon mode'
if [ "x$1" != "xdaemon" ]; then
  $0 daemon 1> /dev/null 2> /dev/null &
  exit 0
fi

# reads the config file
f_read_config() {
  if [ "$1" == -v ]; then
    $ECHO 'reloaded config file'
  fi
  . $ConfigFile
}

# gets state of mdX
# returns:
# 0  :  idle
# 1  :  paused
# 2  :  running
# 99 :  unsupported/error
f_syncstate() {
  local $syspath=/sys/block/$1/md
  local sync_speed=`$CAT $syspath/sync_speed`
  local sync_min=`$CAT $syspath/sync_min`
  local sync_action=`$CAT $syspath/sync_action`
  
  if [ $sync_speed = 'none' ] && [ $sync_action = 'repair' ]; then
      return 2
  elif [ $sync_action = 'idle' ]; then
    if [ $sync_min -gt 0 ]; then
      return 1
    else
      return 0
    fi
  else
    return 99
  fi
}

f_read_config
# On SIGHUP, re-read config
# commented out till fully supported
#trap 'read_config -v' HUP

if [ ! -e $PIDFile ]; then
  trap "$RM -f $PIDFile; exit" INT TERM EXIT
  $ECHO $$ > $PIDFile
  while true; do
    
    ##########################################################################
    
    dow_now=`$DATE +%w`
    hour_now=`$DATE +%k`
    
    # are we're scheduled for today?
    if [ ${rundow[$dow_now]} -eq 1 ]; then
      if [ ${runhour[$hour_now]} -eq 1 ]; then
        
      else
        # sleep till next hour
        local next_hour=`date -d '+1 hour' +'%D %H:00:00'`
        $SLEEP $((`date -d "$next_hour" +%s` - `date +%s`))
      fi
    else
      # sleep till next day
      local next_midnight=`date -d 'tomorrow' +'%D 00:00:00'`
      $SLEEP $((`date -d "$next_midnight" +%s` - `date +%s`))
    fi
    
    # sleep a extra sec to avoid loop on second 0 - just some paranoia
    $SLEEP 1
    
    ##########################################################################
    
  done
  $RM $PIDile
  trap - INT TERM EXIT
else
  $ECHO "already running"
  exit
fi
